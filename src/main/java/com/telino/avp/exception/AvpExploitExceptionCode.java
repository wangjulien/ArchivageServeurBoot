package com.telino.avp.exception;

import java.util.Objects;

//static {
//	Map<String, String[]> aMap = new HashMap<>();
//	aMap.put("1", new String[] { "Action non autorisée pour ce type de document",
//			"Action non autorisée pour ce type de document" });
//	aMap.put("2", new String[] { "Archivage non autorisé pour ce type de document",
//			"Archivage non autorisé pour ce type de document" });
//	aMap.put("3", new String[] { "Format mime non autorisé pour ce document",
//			"Format mime non autorisé pour ce document" });
//	aMap.put("4", new String[] { "Les mots clés ne sont pas renseignés", "Les mots clés ne sont pas renseignés" });
//	aMap.put("5", new String[] { "Code application erroné ou non renseigné",
//			"Code application erroné ou non renseigné" });
//	aMap.put("6", new String[] { "Document déjà archivé", "Document déjà archivé" });
//	aMap.put("7", new String[] { "Pas de profil d’archivage défini pour le type de document",
//			"Pas de profil d’archivage défini pour le type de document" });
//	aMap.put("8",
//			new String[] { "Le type de document n’est pas renseigné", "Le type de document n’est pas renseigné" });
//	aMap.put("9", new String[] { "Informations de connexion erronées", "Informations de connexion erronées" });
//	aMap.put("10", new String[] { "Document inexistant", "Document inexistant" });
//	aMap.put("11", new String[] { "L'empreinte calculée ne correspond pas à celle enregistrée",
//			"L'empreinte calculée ne correspond pas à celle enregistrée" });
//	aMap.put("12", new String[] { "Tentative de suppression d’un document non archive",
//			"Tentative de suppression d’un document non archive" });
//	aMap.put("13", new String[] { "Document non trouvé dans la GED", "Document non trouvé dans la GED" });


//	aMap.put("506", new String[] { "L'archive demandée n'a jamais fait l'objet d'une attestation de dépôt",
//			"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });


public enum AvpExploitExceptionCode {
	ARCHIVE_ATTESTATION_ERROR("Impossible d'archiver l'attestation de dépôt", null),
	ARCHIVE_DOC_COMPUTE_PRINT_ERROR("Erreur de Hashage Algo lors de calculer l'empreinte du document",
			ExternalDetail.TECH_ERROR),
	ARCHIVE_DOC_COMPUTE_INTERNAL_PRINT_ERROR("Erreur de Hashage Algo lors de calculer l'empreinte Telino du document",
			ExternalDetail.TECH_ERROR),
	ARCHIVE_DOC_DAO_ERROR("Erreur du couche persistence lors d de archiver un document",
			ExternalDetail.TECH_ERROR),
	ARCHIVE_DOC_GET_GED("Erreur d'archivage : mise à jour de la GED avec le document archivé impossible",
			ExternalDetail.COM_GED_ERROR),
	
	BUILD_LOG_FILE_ERROR("Erreur lors de build XML log file en parseant l'object Log",
			ExternalDetail.TECH_ERROR),
	BUILD_LOG_FILE_GET_CONTENU_DAO_ERROR("Erreur du couche persistence lors de recuperer le contenu des logs", 
			ExternalDetail.TECH_ERROR),
	
	CHECK_FILE_INPUT_ERROR("Entrée 'input' ne peut pas être parsé en JSON", 
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_FILE_GET_ERROR("Impossible de récupérer ou décrypter l'archive du module de stockage",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_FILE_PRINT_CONFLICT_ERROR("L'empreinte stocké lors du dépôt de l'archive ne correspond pas à l'empreinte calculée",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_FILE_PRINCIPAL_PRINT_ERROR("L'empreinte stocké en base principale est différent de l'empreinte calculée",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_FILE_MIRROR_PRINT_ERROR("Echec du contrôle d'intégrité : l'empreinte stocké en base miroir est différent de l'empreinte calculée",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_LOG_ENTIRETY_ERROR("Le journal a été modifié depuis son scellement, l'empreinte calculé ne correspond pas au tampon d'horodatage",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_LOG_CAL_HASH_ERROR("Impossible de calculer le HASH du contenu des log",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_LOG_GET_CONTENU_DAO_ERROR("Erreur du couche persistence lors de recuperer le contenu des logs", 
			ExternalDetail.TECH_ERROR),
	CHECK_LOG_TAMPON_ERROR("Impossible de récupérer le tampon d'horodateg de ce journal", 
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_LOG_TAMPON_MISMATCH_ERROR("Le tampon d'horodatage n'a pas été délivré le même jour que le scellement du journal",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	CHECK_LOG_MIRROR_DB_ERROR("Le contenu du journal de la base secondaire a été modifié", 
			ExternalDetail.SEALING_ERROR),
	
	DRAFT_DELETE_ERROR("Erreur du couche persistence lors de supprimer un draft", 
			ExternalDetail.TECH_ERROR),
	DRAFT_REFUSE_ERROR("Erreur du couche persistence lors de refuser un draft", 
			ExternalDetail.TECH_ERROR),
	DRAFT_SAVE_ERROR("Erreur du couche persistence lors de souvegarder un draft", 
			ExternalDetail.TECH_ERROR),
	DRAFT_GET_INFO_ERROR("Erreur du couche persistence lors de recupérer les infos d'un draft", 
			ExternalDetail.TECH_ERROR),
	DRAFT_GET_ERROR("Erreur lors de recupérer un draft avec contenu", 
			ExternalDetail.TECH_ERROR),
	DRAFT_ANTI_VIRUS_WRITE_ERROR("Erreur lors de l'écriture du fichier pour vérification anti-virus",
			ExternalDetail.VIRUS_SCAN_ERROR),
	DRAFT_ANTI_VIRUS_SCAN_ERROR("Aucun fichier scanné lors de du passage antivirus",
			ExternalDetail.VIRUS_SCAN_ERROR),
	DRAFT_ANTI_VIRUS_INFECTED_ERROR("Fichier infecté par un virus", null),
	DRAFT_ANTI_VIRUS_EXEC_ERROR("Erreur lors de l'execution de l'antivirus",
			ExternalDetail.VIRUS_SCAN_ERROR),
	DRAFT_FORMAT_VALIDE_ERROR("Erreur lors de la validation d'un fichier via le valideur",
			ExternalDetail.TECH_ERROR),
	
	DOC_GET_DAO_ERROR("Erreur du couche persistence lors de recuperer le document meta-donnee", 
			ExternalDetail.TECH_ERROR),
	DOC_DELETE_ERROR("Erreur impossible de supprimer les archives",
			ExternalDetail.TECH_ERROR),
	DOC_UPDATE_DAO_ERROR("Erreur du couche persistence lors de mettre a jour le document meta-donnee", 
			ExternalDetail.TECH_ERROR),

	EXP_TASK_INPUT_ERROR("Appel http ne contient pas docid ", 
			ExternalDetail.TECH_ERROR),
	
	GET_COM_ARCHIVE("Impossible de récupérer l'archive demandée lors de la communication",
			ExternalDetail.COM_ARCHIVE_ERROR),
	GET_COM_ZIP_FILE("Echec de constitution du fichier zip de communication",
			ExternalDetail.TECH_ERROR),
	GET_REST_ZIP_FILE("Echec de constitution du fichier zip de restitution",
			ExternalDetail.TECH_ERROR),
	GET_LOG_DAO_ERROR("Erreur du couche persistence lors de recuperer le log", 
			ExternalDetail.TECH_ERROR),
	
	PASSWORD_CHECK_ERROR("Impossible de verifier le HASH dans syst_initpassword avec Password du serveur", 
			ExternalDetail.TECH_ERROR),
	PASSWORD_UPDATE_ERROR("Impossible de mettre a jour Password du serveur dans syst_initpassword", 
			ExternalDetail.TECH_ERROR),
	
	SAVE_LOG_DAO_ERROR("Erreur du couche persistence lors d'ajouter une entrée dans le journal des archives",
			ExternalDetail.TECH_ERROR),
	SAVE_LOG_BUILD_TAMPON_ERROR("Impossible de reconstruire le tampon d'horodatage associé au journal",
			ExternalDetail.TECH_ERROR),
	SAVE_COM_DAO_ERROR("Erreur du couche persistence lors d'ajouter une communication",
			ExternalDetail.TECH_ERROR),
	SAVE_REST_DAO_ERROR("Erreur du couche persistence lors d'ajouter une restitution",
			ExternalDetail.TECH_ERROR),
	
	SEAL_LOG_ARCHIVE_DRAFT_ERROR("Erreur du couche persistence lors de mettre à jour le statut de d'une archive ou d'un draft",
			ExternalDetail.TECH_ERROR),
	SEAL_LOG_GET_TAMPON_ERROR("Impossible d'obtenir un tampon d'horodatage",
			ExternalDetail.ENTIRETY_CHECK_ERROR),
	
	STORAGE_PARAM_ERROR("Erreur du couche persistence lors de lecture de Param et ParamStorage",
			ExternalDetail.TECH_ERROR),
	STORAGE_CREATE_ERROR("Module de stockage : Impossible de créer une nouvelle unité de stockage", null),
	STORAGE_CALL_SERVLET_ERROR("Erreur lors de l'appel de la servlet du module de stockage"
			, ExternalDetail.TECH_ERROR),
	STORAGE_CHECK_ERROR("Module de stockage : Impossible de controler les fichiers",
			ExternalDetail.TECH_ERROR),
	STORAGE_DELET_ERROR("Module de stockage : Impossible de supprimer le fichier",
			ExternalDetail.TECH_ERROR),
	STORAGE_READ_ERROR("Module de stockage : Impossible de recuperer le fichier",
			ExternalDetail.TECH_ERROR),
	STORAGE_WRITE_ERROR("Module de stockage : Impossible d'archiver le fichier",
			ExternalDetail.TECH_ERROR),
	STORAGE_UNIT_PARAM_ERROR("Impossible d'initialiser le module de stockage local - les paramètres de stockages ne correspondent pas", 
			ExternalDetail.TECH_ERROR),
	STORAGE_INPUT_LACK_PRINT("Empreinte unique servant au stockage non communiquée",
			ExternalDetail.TECH_ERROR),
	STORAGE_INPUT_LACK_ID("Id du module de stockage non communiqué",
			ExternalDetail.TECH_ERROR),
	STORAGE_INPUT_LACK_CONTENT("Contenu à archiver vide ou non communiqué",
			ExternalDetail.TECH_ERROR),
	STORAGE_OUTPUT_ERROR("Code retour ne peut pas être interpreté correctement",
			ExternalDetail.TECH_ERROR),
	STORAGE_INIT_ENCRYPT_ERROR("Erreur du couche persistence lors de récupérer la clé de chiffrement lié au module de cryptage",
			ExternalDetail.TECH_ERROR),
	STORAGE_ENCRYPT_ERROR("Erreur lors de chiffrer document",
			ExternalDetail.TECH_ERROR),
	STORAGE_DECRYPT_ERROR("Echec du decryptage du document", null),
	
	SYSTEM_ERROR("Erreur système", null),
	UNKNOWN_COMMAND("Commande inconnue", null);
	
	private String internalDetail;
	private ExternalDetail externalDetail;
	
	private enum ExternalDetail {
		COM_ARCHIVE_ERROR("L'archive requise lors de la communication n'est pas disponible dans le SAE."),
		ENTIRETY_CHECK_ERROR("Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive"),
		TECH_ERROR("Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique"),
		COM_GED_ERROR("Une erreur de communication avec la GED a eu lieu. Si le problème persiste, merci de contacter votre support technique"),
		VIRUS_SCAN_ERROR("Erreur lors du scan anti-virus. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique"),
		SEALING_ERROR("Echec de scellement de la base");
		
		private String info;

		private ExternalDetail(String info) {
			this.info = info;
		}
		
		@Override
		public String toString() {
			return info;
		}
	}
	
	private AvpExploitExceptionCode(String internalDetail, ExternalDetail externalDetail) {
		this.internalDetail = internalDetail;
		this.externalDetail = externalDetail;
	}

	public String getInternalDetail() {
		return internalDetail;
	}

	public String getExternalDetail() {
		return Objects.isNull(externalDetail) ? internalDetail : externalDetail.toString();
	}
}