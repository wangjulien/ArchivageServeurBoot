package com.telino.avp.exception;

import java.util.HashMap;
import java.util.Map;

public class AvpExploitException extends Exception {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7810453925778258365L;

	private static Map<String, String[]> tableLibelleErreur;
	private String archiveId;
	private String journalId;
	private String action;

	
	private String processus;
	static {
		Map<String, String[]> aMap = new HashMap<>();
		aMap.put("1", new String[] { "Action non autorisée pour ce type de document",
				"Action non autorisée pour ce type de document" });
		aMap.put("2", new String[] { "Archivage non autorisé pour ce type de document",
				"Archivage non autorisé pour ce type de document" });
		aMap.put("3", new String[] { "Format mime non autorisé pour ce document",
				"Format mime non autorisé pour ce document" });
		aMap.put("4", new String[] { "Les mots clés ne sont pas renseignés", "Les mots clés ne sont pas renseignés" });
		aMap.put("5", new String[] { "Code application erroné ou non renseigné",
				"Code application erroné ou non renseigné" });
		aMap.put("6", new String[] { "Document déjà archivé", "Document déjà archivé" });
		aMap.put("7", new String[] { "Pas de profil d’archivage défini pour le type de document",
				"Pas de profil d’archivage défini pour le type de document" });
		aMap.put("8",
				new String[] { "Le type de document n’est pas renseigné", "Le type de document n’est pas renseigné" });
		aMap.put("9", new String[] { "Informations de connexion erronées", "Informations de connexion erronées" });
		aMap.put("10", new String[] { "Document inexistant", "Document inexistant" });
		aMap.put("11", new String[] { "L'empreinte calculée ne correspond pas à celle enregistrée",
				"L'empreinte calculée ne correspond pas à celle enregistrée" });
		aMap.put("12", new String[] { "Tentative de suppression d’un document non archive",
				"Tentative de suppression d’un document non archive" });
		aMap.put("13", new String[] { "Document non trouvé dans la GED", "Document non trouvé dans la GED" });
		aMap.put("601", new String[] { "Erreur SQL impossible de créer une restitution",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("602", new String[] { "Erreur SQL impossible de créer une communication",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("603", new String[] { "Erreur SQL impossible de vérifier l'intégrité de l'archive",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("604", new String[] { "Erreur SQL impossible d'initialisé archive API",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("605", new String[] {
				"Erreur SQL impossible de récupérer la clé de chiffrement lié au module de cryptage",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("606", new String[] { "Erreur SQL impossible d'initialiser le journal des archives",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("607", new String[] { "Erreur SQL impossible d'ajouter une entrée dans le journal des archives",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("608", new String[] { "Erreur SQL impossible d'initialiser le journal des evenements",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("609", new String[] { "Erreur SQL impossible d'ajouter une entrée dans le journal des evenements",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("610", new String[] { "Erreur SQL impossible de calculer la date de destruction de l'archive",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("611", new String[] { "Erreur SQL impossible de récupérer les paramètres de connexion de la GED",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("612", new String[] { "Erreur SQL impossible de récupérer une attestation",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("613", new String[] { "Erreur SQL impossible de récupérer une archive",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("614", new String[] { "Erreur SQL impossible de lire un draft",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("615", new String[] { "Erreur SQL impossible de stocker un draft",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("616", new String[] { "Erreur SQL impossible de supprimer un draft",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("617", new String[] { "Erreur SQL impossible de recupérer les infos d'un draft",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("618", new String[] { "Erreur SQL impossible de recupérer les infos d'une archive",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("619", new String[] { "Erreur SQL autre",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("620", new String[] {
				"Erreur SQL impossible de mettre à jour le statut de d'une archive ou d'un draft",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("621", new String[] { "Erreur SQL impossible de récupérer les informations liées à l'archives",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("622", new String[] { "Erreur SQL impossible de récupérer l'empreinte de l'archive lors de son dépôt",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("501", new String[] { "Module de stockage principal non initialisé",
				"Module de stockage principal non initialisé" });
		aMap.put("502", new String[] { "Module de stockage miroir non initialisé",
				"Module de stockage miroir non initialisé" });
		aMap.put("503", new String[] { "L'empreinte stocké en base principale est différent de l'empreinte calculée",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("504",
				new String[] { "Le tampon d'horodatage n'a pas été délivré le même jour que le scellement du journal",
						"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("505", new String[] {
				"Le journal a été modifié depuis son scellement, l'empreinte calculé ne correspond pas au tampon d'horodatage",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("521",
				new String[] { "L'empreinte stocké lors du dépôt de l'archive ne correspond pas à l'empreinte calculée",
						"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("506", new String[] { "L'archive demandée n'a jamais fait l'objet d'une attestation de dépôt",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("519", new String[] { "Le tampon d'horodatage n'est pas valide",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("518", new String[] { "Impossible de récupérer le tampon d'horodateg de ce journal",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("507", new String[] { "Impossible de reconstruire le tampon d'horodatage associé au journal",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("508", new String[] { "Impossible de récupérer ou décrypter l'archive du module de stockage",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("509", new String[] {
				"Impossible d'initialiser les modules de stockage car le paramétrage est incohérent", "" });
		aMap.put("510", new String[] { "Module de stockage : Impossible de récupérer le fichier",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("511", new String[] { "Empreinte unique servant au stockage non communiquée",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("512", new String[] { "Id du module de stockage non communiqué",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("513", new String[] {
				"Echec du contrôle d'intégrité : l'empreinte stocké en base miroir est différent de l'empreinte calculée",
				"Echec du contrôle d'intégrité. Une action est en cours pour essayer de restaurer l'archive" });
		aMap.put("514", new String[] { "Erreur lors de l'appel de la servlet du module de stockage",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("515", new String[] { "Module de stockage : Impossible de supprimer le fichier",
				"Une erreur technique a eu lieu. Une action est en cours pour compléter la suppression." });
		aMap.put("516", new String[] { "Contenu à archiver vide ou non communiqué",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("517", new String[] { "Module de stockage : Impossible de créer une nouvelle unité de stockage",
				"Module de stockage : Impossible de créer une nouvelle unité de stockage" });
		aMap.put("520", new String[] { "Impossible d'archiver l'attestation de dépôt",
				"Impossible d'archiver l'attestation de dépôt" });
		aMap.put("530", new String[] { "Impossible d'instancier le module de decryptage",
				"Impossible d'instancier le module de decryptage" });
		aMap.put("531", new String[] { "Echec du decryptage du document", "Echec du decryptage du document" });
		aMap.put("540", new String[] { "Echec de constitution du fichier zip de restitution",
				"Une erreur a eu lieu lors de la constitution de votre communication. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("541", new String[] { "Echec de constitution du fichier zip de restitution",
				"Une erreur a eu lieu lors de la constitution de votre communication. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("542", new String[] { "Impossible de récupérer l'archive demandée lors de la communication",
				"L'archive requise lors de la communication n'est pas disponible dans le SAE." });
		aMap.put("701", new String[] { "Impossible d'obtenir un tampon d'horodatage",
				"Impossible d'obtenir un tampn d'horodatage" });
		aMap.put("702",
				new String[] {
						"Le contenu du journal de la base principal est différent du contenu de la base secondaire",
						"Echec de scellement de la base" });
		aMap.put("703", new String[] { "Le contenu du journal de la base secondaire a été modifié",
				"Echec de scellement de la base" });
		aMap.put("301", new String[] {
				"Erreur d'archivage : impossible de récupérer les informations de la GED ayant demandé l'archivage",
				"Une erreur de communication avec la GED a eu lieu. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("302", new String[] {
				"Erreur d'archivage : impossible de mettre à jour la GED avec les informations d'archivage",
				"Une erreur de communication avec la GED a eu lieu. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("303", new String[] { "Erreur d'archivage : mise à jour de la GED avec le document archivé impossible",
				"Une erreur de communication avec la GED a eu lieu. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("304", new String[] { "Le paramétrage de la GED est inexistant",
				"Une erreur de communication avec la GED a eu lieu. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("401", new String[] {
				"Problème d'instanciation du validateur de fichier jhove : configuration mal défini.",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("402", new String[] { "Erreur lors de la validation d'un fichier via le valideur",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("901", new String[] { "Erreur lors de l'écriture du fichier pour vérification anti-virus",
				"Erreur lors du scan anti-virus. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("902", new String[] { "Erreur lors de l'execution de l'antivirus",
				"Erreur lors du scan anti-virus. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("903", new String[] { "Aucun fichier scanné lors de du passage antivirus",
				"Erreur lors du scan anti-virus. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("904", new String[] { "Fichier infecté par un virus", "Fichier infecté par un virus !" });
		aMap.put("101", new String[] { "Erreur lors de la mise à jour du statut de la demande d'archivage",
				"Une erreur technique a eu lieu. Merci de ressayer ultérieurement. Si le problème persiste, merci de contacter votre support technique" });
		aMap.put("90", new String[] { "Commande inconnue", "Commande inconnue" });
		aMap.put("99", new String[] { "Erreur système", "Erreur système" });
		setTableLibelleErreur(aMap);
	}

	/**
	 * @param codeErreur
	 *            le code erreur de l'exception
	 * @param e
	 *            l'exception ayant causé cette AVPExploitException
	 * @param action
	 *            l'action causant cette exception
	 * @param processus
	 *            le processsus causant cette exception
	 * @param docid
	 *            l'identifiant de l'archive impliquée dans cette exception
	 * @param logid
	 *            l'identifiant du journal impliqué dans cette exception
	 */
	public AvpExploitException(String codeErreur, Throwable e, String action, String processus, String docid,
			String logid) {
		super(codeErreur, e);
		this.action = action;
		this.processus = processus;
		this.archiveId = docid;
		this.journalId = logid;
	}

	public AvpExploitException(String codeErreur, Throwable e) {
		super(codeErreur, e);
	}

	public String getClassesInvolved() {
		String listClassesinvolved = "";
		int i = 0;
		for (StackTraceElement ste : this.getStackTrace()) {
			if (i > 5)
				break;
			if (listClassesinvolved != "")
				listClassesinvolved += ">";
			listClassesinvolved += ste.getClassName();
			i++;
		}
		return listClassesinvolved;

	}

	public String getMethodName() {
		String methodName = "";
		int i = 0;
		for (StackTraceElement ste : this.getStackTrace()) {
			if (i > 1)
				break;
			methodName += ste.getMethodName();
			i++;
		}
		return methodName;

	}

	public String getArchiveId() {
		return archiveId;
	}

	public void setArchiveId(String archiveId) {
		this.archiveId = archiveId;
	}

	public String getJournalId() {
		return journalId;
	}

	public void setJournalId(String journalId) {
		this.journalId = journalId;
	}

	public String getAction() {
		return action;
	}

	public void setAction(String action) {
		this.action = action;
	}

	public String getProcessus() {
		return processus;
	}

	public void setProcessus(String processus) {
		this.processus = processus;
	}
	
	public static Map<String, String[]> getTableLibelleErreur() {
		return tableLibelleErreur;
	}

	private static void setTableLibelleErreur(Map<String, String[]> tableLibelleErreur) {
		AvpExploitException.tableLibelleErreur = tableLibelleErreur;
	}
}
