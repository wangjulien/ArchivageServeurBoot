package com.telino.avp.exception;

public class AvpExploitException extends Exception {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7810453925778258365L;

//	private String processus;
	private String action;
	private String archiveId;
	private String journalId;

	private AvpExploitExceptionCode codeErreur;

	/**
	 * @param codeErreur
	 *            le code erreur de l'exception
	 * @param e
	 *            l'exception ayant causé cette AVPExploitException
	 * @param action
	 *            l'action causant cette exception
	 * @param processus
	 *            le processsus causant cette exception
	 * @param docid
	 *            l'identifiant de l'archive impliquée dans cette exception
	 * @param logid
	 *            l'identifiant du journal impliqué dans cette exception
	 */
	public AvpExploitException(AvpExploitExceptionCode codeErreur, Throwable e, String action) {
		super(codeErreur.toString(), e);
		this.action = action;
	}

	public AvpExploitException(AvpExploitExceptionCode codeErreur, Throwable e, String action,
			String docid, String logid) {
		super(codeErreur.toString(), e);
//		this.processus = processus;
		this.action = action;
		this.archiveId = docid;
		this.journalId = logid;
	}

	// public String getProcessus() {
	// return processus;
	// }
	//
	// public void setProcessus(String processus) {
	// this.processus = processus;
	// }

	public String getAction() {
		return action;
	}

	public void setAction(String action) {
		this.action = action;
	}

	public String getArchiveId() {
		return archiveId;
	}

	public void setArchiveId(String archiveId) {
		this.archiveId = archiveId;
	}

	public String getJournalId() {
		return journalId;
	}

	public void setJournalId(String journalId) {
		this.journalId = journalId;
	}

	public AvpExploitExceptionCode getCodeErreur() {
		return codeErreur;
	}

	public void setCodeErreur(AvpExploitExceptionCode codeErreur) {
		this.codeErreur = codeErreur;
	}

	public String getMethodName() {
		String methodName = "";
		int i = 0;
		for (StackTraceElement ste : this.getStackTrace()) {
			if (i > 1)
				break;
			methodName += ste.getMethodName();
			i++;
		}
		return methodName;
	}
}
